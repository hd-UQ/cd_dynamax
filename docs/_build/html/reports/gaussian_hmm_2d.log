Traceback (most recent call last):
  File "/opt/anaconda3/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/opt/anaconda3/lib/python3.8/site-packages/nbclient/client.py", line 1087, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/anaconda3/lib/python3.8/site-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/anaconda3/lib/python3.8/site-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/opt/anaconda3/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/opt/anaconda3/lib/python3.8/site-packages/nbclient/client.py", line 540, in async_execute
    await self.async_execute_cell(
  File "/opt/anaconda3/lib/python3.8/site-packages/nbclient/client.py", line 832, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/opt/anaconda3/lib/python3.8/site-packages/nbclient/client.py", line 740, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply['content'])
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Initialize HMMs, with inexact number of states
em_params, param_props = hmm.random_initialization(jr.PRNGKey(1))
sem_params, param_props = hmm.random_initialization(jr.PRNGKey(1))

# Fit
num_iters = 50

print('Fitting via exact EM...')
em_params, em_lps = hmm.fit_em(em_params, param_props, batch_emissions, num_iters)

print()
print('Fitting via stochastic EM (no progress bar)...')
minibatch_size = 3
emissions_generator = batch_emissions.reshape(num_batches // minibatch_size, minibatch_size, num_timesteps, emission_dim)
sem_params, sem_lps = hmm.fit_stochastic_em(sem_params, param_props, emissions_generator, num_epochs=num_iters)
print('\tDone')

# Plot log probs vs num_iterations
plt.plot(jnp.arange(len(em_lps)), em_lps, label='Exact EM')
plt.plot(jnp.arange(len(sem_lps)), sem_lps, label='Stochastic EM')
plt.xlabel('num epochs')
plt.ylabel('log prob')
plt.legend()
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mTypeError[0m                                 Traceback (most recent call last)
[0;32m<ipython-input-4-31c8cd521ed0>[0m in [0;36m<module>[0;34m[0m
[1;32m      7[0m [0;34m[0m[0m
[1;32m      8[0m [0mprint[0m[0;34m([0m[0;34m'Fitting via exact EM...'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m----> 9[0;31m [0mem_params[0m[0;34m,[0m [0mem_lps[0m [0;34m=[0m [0mhmm[0m[0;34m.[0m[0mfit_em[0m[0;34m([0m[0mem_params[0m[0;34m,[0m [0mparam_props[0m[0;34m,[0m [0mbatch_emissions[0m[0;34m,[0m [0mnum_iters[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     10[0m [0;34m[0m[0m
[1;32m     11[0m [0mprint[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/anaconda3/lib/python3.8/site-packages/dynamax/abstractions.py[0m in [0;36mfit_em[0;34m(self, initial_params, param_props, emissions, covariates, num_iters, verbose)[0m
[1;32m    143[0m         [0;31m# Make sure the emissions and covariates have batch dimensions[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[1;32m    144[0m         [0mbatch_emissions[0m [0;34m=[0m [0mensure_array_has_batch_dim[0m[0;34m([0m[0memissions[0m[0;34m,[0m [0mself[0m[0;34m.[0m[0memission_shape[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 145[0;31m         [0mbatch_covariates[0m [0;34m=[0m [0mensure_array_has_batch_dim[0m[0;34m([0m[0mcovariates[0m[0;34m,[0m [0mself[0m[0;34m.[0m[0mcovariates_shape[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    146[0m [0;34m[0m[0m
[1;32m    147[0m         [0;34m@[0m[0mjit[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/anaconda3/lib/python3.8/site-packages/dynamax/utils.py[0m in [0;36mensure_array_has_batch_dim[0;34m(tree, instance_shapes)[0m
[1;32m    135[0m             [0;32mraise[0m [0mException[0m[0;34m([0m[0;34m"array has too many dimensions!"[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    136[0m [0;34m[0m[0m
[0;32m--> 137[0;31m     [0;32mreturn[0m [0mtree_map[0m[0;34m([0m[0m_expand_dim[0m[0;34m,[0m [0mtree[0m[0;34m,[0m [0minstance_shapes[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m
[0;32m/opt/anaconda3/lib/python3.8/site-packages/jax/_src/tree_util.py[0m in [0;36mtree_map[0;34m(f, tree, is_leaf, *rest)[0m
[1;32m    198[0m   [0mleaves[0m[0;34m,[0m [0mtreedef[0m [0;34m=[0m [0mtree_flatten[0m[0;34m([0m[0mtree[0m[0;34m,[0m [0mis_leaf[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    199[0m   [0mall_leaves[0m [0;34m=[0m [0;34m[[0m[0mleaves[0m[0;34m][0m [0;34m+[0m [0;34m[[0m[0mtreedef[0m[0;34m.[0m[0mflatten_up_to[0m[0;34m([0m[0mr[0m[0;34m)[0m [0;32mfor[0m [0mr[0m [0;32min[0m [0mrest[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 200[0;31m   [0;32mreturn[0m [0mtreedef[0m[0;34m.[0m[0munflatten[0m[0;34m([0m[0mf[0m[0;34m([0m[0;34m*[0m[0mxs[0m[0;34m)[0m [0;32mfor[0m [0mxs[0m [0;32min[0m [0mzip[0m[0;34m([0m[0;34m*[0m[0mall_leaves[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    201[0m [0;34m[0m[0m
[1;32m    202[0m [0;32mdef[0m [0mbuild_tree[0m[0;34m([0m[0mtreedef[0m[0;34m,[0m [0mxs[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/anaconda3/lib/python3.8/site-packages/jax/_src/tree_util.py[0m in [0;36m<genexpr>[0;34m(.0)[0m
[1;32m    198[0m   [0mleaves[0m[0;34m,[0m [0mtreedef[0m [0;34m=[0m [0mtree_flatten[0m[0;34m([0m[0mtree[0m[0;34m,[0m [0mis_leaf[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    199[0m   [0mall_leaves[0m [0;34m=[0m [0;34m[[0m[0mleaves[0m[0;34m][0m [0;34m+[0m [0;34m[[0m[0mtreedef[0m[0;34m.[0m[0mflatten_up_to[0m[0;34m([0m[0mr[0m[0;34m)[0m [0;32mfor[0m [0mr[0m [0;32min[0m [0mrest[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 200[0;31m   [0;32mreturn[0m [0mtreedef[0m[0;34m.[0m[0munflatten[0m[0;34m([0m[0mf[0m[0;34m([0m[0;34m*[0m[0mxs[0m[0;34m)[0m [0;32mfor[0m [0mxs[0m [0;32min[0m [0mzip[0m[0;34m([0m[0;34m*[0m[0mall_leaves[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    201[0m [0;34m[0m[0m
[1;32m    202[0m [0;32mdef[0m [0mbuild_tree[0m[0;34m([0m[0mtreedef[0m[0;34m,[0m [0mxs[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/anaconda3/lib/python3.8/site-packages/dynamax/utils.py[0m in [0;36m_expand_dim[0;34m(x, shp)[0m
[1;32m    121[0m     """
[1;32m    122[0m     [0;32mdef[0m [0m_expand_dim[0m[0;34m([0m[0mx[0m[0;34m,[0m [0mshp[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 123[0;31m         [0mndim[0m [0;34m=[0m [0mlen[0m[0;34m([0m[0mshp[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    124[0m         [0;32massert[0m [0mx[0m[0;34m.[0m[0mndim[0m [0;34m>[0m [0mndim[0m[0;34m,[0m [0;34m"array does not match expected shape!"[0m[0;34m[0m[0;34m[0m[0m
[1;32m    125[0m         [0;32massert[0m [0mall[0m[0;34m([0m[0;34m[[0m[0;34m([0m[0md1[0m [0;34m==[0m [0md2[0m[0;34m)[0m [0;32mfor[0m [0md1[0m[0;34m,[0m [0md2[0m [0;32min[0m [0mzip[0m[0;34m([0m[0mx[0m[0;34m.[0m[0mshape[0m[0;34m[[0m[0;34m-[0m[0mndim[0m[0;34m:[0m[0;34m][0m[0;34m,[0m [0mshp[0m[0;34m)[0m[0;34m][0m[0;34m)[0m[0;34m,[0m[0;31m [0m[0;31m\[0m[0;34m[0m[0;34m[0m[0m

[0;31mTypeError[0m: object of type 'NoneType' has no len()
TypeError: object of type 'NoneType' has no len()

